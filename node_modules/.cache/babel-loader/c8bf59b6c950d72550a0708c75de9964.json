{"ast":null,"code":"var _jsxFileName = \"/Users/braxtoncoats/Github/bcd/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Home from './pages/Home';\nimport Navigation from './navigation/Navigation';\nimport dittodata from './ditto';\nimport DittoProvider from \"ditto-react\";\nimport Footer from './pages/Footer';\nimport Project1 from './pages/Project1';\nimport Project2 from './pages/Project2';\nimport AboutMe from './pages/AboutMe';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { CustomPalette } from './theme/CustomPalette';\nimport { Box } from '@mui/system';\nimport { Switch } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorModeContext = /*#__PURE__*/React.createContext({\n  toggleColorMode: () => {}\n});\nvar isDarkMode = 'false';\n\nfunction MyApp() {\n  _s();\n\n  const colorMode = React.useContext(ColorModeContext);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      bgcolor: 'background.main'\n    },\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        checked: isDarkMode,\n        onChange: colorMode.toggleColorMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"about-me\",\n          element: /*#__PURE__*/_jsxDEV(AboutMe, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"project-1\",\n          element: /*#__PURE__*/_jsxDEV(Project1, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"project-2\",\n          element: /*#__PURE__*/_jsxDEV(Project2, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyApp, \"IaYDmO+hPOIduo0ClJI2lIZymYY=\");\n\n_c = MyApp;\nexport default function ToggleColorMode() {\n  _s2();\n\n  const storedDarkMode = localStorage.getItem(\"DARK_MODE\");\n  const [mode, setMode] = React.useState(storedDarkMode);\n  useEffect(() => {\n    localStorage.setItem(\"DARK_MODE\", mode);\n  }, [mode]);\n  const colorMode = React.useMemo(() => ({\n    toggleColorMode: () => {\n      setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n      isDarkMode = !isDarkMode;\n      console.log(`Is in dark mode? ${isDarkMode}`);\n    }\n  }), []);\n  const theme = React.useMemo(() => createTheme(CustomPalette(mode)), [mode]);\n  return /*#__PURE__*/_jsxDEV(DittoProvider, {\n    source: dittodata,\n    projectId: \"project_62f05a6f45f99efffd0ab277\",\n    children: /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n      value: colorMode,\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(MyApp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ToggleColorMode, \"tSqr+o0gTus1oxIj3CodjSvHsDw=\");\n\n_c2 = ToggleColorMode;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyApp\");\n$RefreshReg$(_c2, \"ToggleColorMode\");","map":{"version":3,"names":["React","useEffect","ThemeProvider","createTheme","Home","Navigation","dittodata","DittoProvider","Footer","Project1","Project2","AboutMe","BrowserRouter","Router","Routes","Route","CustomPalette","Box","Switch","ColorModeContext","createContext","toggleColorMode","isDarkMode","MyApp","colorMode","useContext","bgcolor","ToggleColorMode","storedDarkMode","localStorage","getItem","mode","setMode","useState","setItem","useMemo","prevMode","console","log","theme"],"sources":["/Users/braxtoncoats/Github/bcd/src/App.js"],"sourcesContent":["import * as React from 'react';\nimport { useEffect } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Home from './pages/Home'\nimport Navigation from './navigation/Navigation'\nimport dittodata from './ditto';\nimport DittoProvider from \"ditto-react\";\nimport Footer from './pages/Footer';\nimport Project1 from './pages/Project1';\nimport Project2 from './pages/Project2';\nimport AboutMe from './pages/AboutMe';\nimport { BrowserRouter as Router, Routes, Route} from 'react-router-dom';\nimport { CustomPalette } from './theme/CustomPalette';\nimport { Box } from '@mui/system';\nimport { Switch } from '@mui/material';\n\nconst ColorModeContext = React.createContext({ toggleColorMode: () => {} });\n\nvar isDarkMode = 'false';\n\nfunction MyApp() {\n  const colorMode = React.useContext(ColorModeContext);\n  return (\n    <Box sx={{ bgcolor: 'background.main' }}>\n    <Router>\n      <Switch checked={isDarkMode} onChange={colorMode.toggleColorMode}/> \n     {/* <Navigation handleChange={colorMode.toggleColorMode} />  */}\n      <Routes>\n        <Route path=\"/\" element={<Home />} />  \n        \n        <Route path='about-me' element={<AboutMe />} />\n        <Route path='project-1' element={<Project1 />} />\n        <Route path='project-2' element={<Project2 />} />\n      </Routes>\n      <Footer />\n    </Router>\n    </Box>\n  );\n}\n\nexport default function ToggleColorMode() {\n  const storedDarkMode = localStorage.getItem(\"DARK_MODE\");\n  const [mode, setMode] = React.useState(storedDarkMode);\n\n\n  useEffect(() => {\n    localStorage.setItem(\"DARK_MODE\", mode);\n  }, [mode]);\n\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n        isDarkMode = !isDarkMode;\n        console.log(`Is in dark mode? ${isDarkMode}`);\n\n      },\n    }),\n    [],\n  );\n\n\n\n  const theme = React.useMemo( () => createTheme(CustomPalette(mode)), [mode]);\n\n  return (\n\n    <DittoProvider source={dittodata} projectId=\"project_62f05a6f45f99efffd0ab277\">\n      <ColorModeContext.Provider value={colorMode}>\n        <ThemeProvider theme={theme}>\n            <MyApp />\n        </ThemeProvider>\n      </ColorModeContext.Provider>\n    </DittoProvider>\n\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}