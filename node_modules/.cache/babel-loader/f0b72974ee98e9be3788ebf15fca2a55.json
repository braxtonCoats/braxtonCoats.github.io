{"ast":null,"code":"/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nconst defaults = require('./defaults');\n/**\n * Returns the path from a path name be splitting the name by a given separator.\n *\n * @private\n * @param {string} pathName\n * @param {Object} opts\n * @returns {Array} - The path\n */\n\n\nfunction getPathFromName(pathName) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const options = Object.assign({}, defaults, opts);\n\n  if (typeof pathName !== 'string') {\n    throw new Error('Getting path from name failed. Name must be a string');\n  }\n\n  return pathName.split(options.separator);\n}\n\nmodule.exports = getPathFromName;","map":{"version":3,"names":["defaults","require","getPathFromName","pathName","opts","options","Object","assign","Error","split","separator","module","exports"],"sources":["/Users/braxtoncoats/Github/bcd/node_modules/style-dictionary/lib/utils/references/getPathFromName.js"],"sourcesContent":["/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nconst defaults = require('./defaults');\n\n/**\n * Returns the path from a path name be splitting the name by a given separator.\n *\n * @private\n * @param {string} pathName\n * @param {Object} opts\n * @returns {Array} - The path\n */\nfunction getPathFromName(pathName, opts = {}) {\n  const options = Object.assign({}, defaults, opts);\n  if (typeof pathName !== 'string') {\n    throw new Error('Getting path from name failed. Name must be a string');\n  }\n  return pathName.split(options.separator);\n}\n\n\nmodule.exports = getPathFromName;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,eAAT,CAAyBC,QAAzB,EAA8C;EAAA,IAAXC,IAAW,uEAAJ,EAAI;EAC5C,MAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,QAAlB,EAA4BI,IAA5B,CAAhB;;EACA,IAAI,OAAOD,QAAP,KAAoB,QAAxB,EAAkC;IAChC,MAAM,IAAIK,KAAJ,CAAU,sDAAV,CAAN;EACD;;EACD,OAAOL,QAAQ,CAACM,KAAT,CAAeJ,OAAO,CAACK,SAAvB,CAAP;AACD;;AAGDC,MAAM,CAACC,OAAP,GAAiBV,eAAjB"},"metadata":{},"sourceType":"script"}