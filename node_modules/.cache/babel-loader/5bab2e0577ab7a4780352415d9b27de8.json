{"ast":null,"code":"/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar groupedMessages = {};\nvar GroupMessages = {\n  GROUP: {\n    PropertyReferenceWarnings: 'Property Reference Errors',\n    PropertyValueCollisions: 'Property Value Collisions',\n    TemplateDeprecationWarnings: 'Template Deprecation Warnings',\n    RegisterTemplateDeprecationWarnings: 'Register Template Deprecation Warnings',\n    SassMapFormatDeprecationWarnings: 'Sass Map Format Deprecation Warnings',\n    MissingRegisterTransformErrors: 'Missing Register Transform Errors',\n    PropertyNameCollisionWarnings: 'Property Name Collision Warnings',\n    FilteredOutputReferences: 'Filtered Output Reference Warnings'\n  },\n  flush: function (messageGroup) {\n    var messages = GroupMessages.fetchMessages(messageGroup);\n    GroupMessages.clear(messageGroup);\n    return messages;\n  },\n  add: function (messageGroup, message) {\n    if (messageGroup) {\n      if (!groupedMessages[messageGroup]) {\n        groupedMessages[messageGroup] = [];\n      }\n\n      if (groupedMessages[messageGroup].indexOf(message) === -1) {\n        groupedMessages[messageGroup].push(message);\n      }\n    }\n  },\n  count: function (messageGroup) {\n    return groupedMessages[messageGroup] ? groupedMessages[messageGroup].length : 0;\n  },\n  fetchMessages: function (messageGroup) {\n    return messageGroup && groupedMessages[messageGroup] || [];\n  },\n  clear: function (messageGroup) {\n    messageGroup && groupedMessages[messageGroup] && delete groupedMessages[messageGroup];\n  }\n};\nmodule.exports = GroupMessages;","map":{"version":3,"names":["groupedMessages","GroupMessages","GROUP","PropertyReferenceWarnings","PropertyValueCollisions","TemplateDeprecationWarnings","RegisterTemplateDeprecationWarnings","SassMapFormatDeprecationWarnings","MissingRegisterTransformErrors","PropertyNameCollisionWarnings","FilteredOutputReferences","flush","messageGroup","messages","fetchMessages","clear","add","message","indexOf","push","count","length","module","exports"],"sources":["/Users/braxtoncoats/Github/bcd/node_modules/style-dictionary/lib/utils/groupMessages.js"],"sourcesContent":["/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar groupedMessages = {};\n\nvar GroupMessages = {\n  GROUP: {\n    PropertyReferenceWarnings: 'Property Reference Errors',\n    PropertyValueCollisions: 'Property Value Collisions',\n    TemplateDeprecationWarnings: 'Template Deprecation Warnings',\n    RegisterTemplateDeprecationWarnings: 'Register Template Deprecation Warnings',\n    SassMapFormatDeprecationWarnings: 'Sass Map Format Deprecation Warnings',\n    MissingRegisterTransformErrors: 'Missing Register Transform Errors',\n    PropertyNameCollisionWarnings: 'Property Name Collision Warnings',\n    FilteredOutputReferences: 'Filtered Output Reference Warnings'\n  },\n\n  flush: function (messageGroup) {\n    var messages = GroupMessages.fetchMessages(messageGroup);\n    GroupMessages.clear(messageGroup);\n    return messages;\n  },\n\n  add: function (messageGroup, message) {\n    if(messageGroup) {\n      if(!groupedMessages[messageGroup]) {\n        groupedMessages[messageGroup] = [];\n      }\n      if(groupedMessages[messageGroup].indexOf(message) === -1) {\n        groupedMessages[messageGroup].push(message);\n      }\n    }\n  },\n\n  count: function (messageGroup) {\n    return groupedMessages[messageGroup] ? groupedMessages[messageGroup].length : 0;\n  },\n\n  fetchMessages: function (messageGroup) {\n    return (messageGroup && groupedMessages[messageGroup]) || [];\n  },\n\n  clear: function (messageGroup) {\n    messageGroup && groupedMessages[messageGroup] && delete groupedMessages[messageGroup];\n  }\n};\n\nmodule.exports = GroupMessages;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,eAAe,GAAG,EAAtB;AAEA,IAAIC,aAAa,GAAG;EAClBC,KAAK,EAAE;IACLC,yBAAyB,EAAE,2BADtB;IAELC,uBAAuB,EAAE,2BAFpB;IAGLC,2BAA2B,EAAE,+BAHxB;IAILC,mCAAmC,EAAE,wCAJhC;IAKLC,gCAAgC,EAAE,sCAL7B;IAMLC,8BAA8B,EAAE,mCAN3B;IAOLC,6BAA6B,EAAE,kCAP1B;IAQLC,wBAAwB,EAAE;EARrB,CADW;EAYlBC,KAAK,EAAE,UAAUC,YAAV,EAAwB;IAC7B,IAAIC,QAAQ,GAAGZ,aAAa,CAACa,aAAd,CAA4BF,YAA5B,CAAf;IACAX,aAAa,CAACc,KAAd,CAAoBH,YAApB;IACA,OAAOC,QAAP;EACD,CAhBiB;EAkBlBG,GAAG,EAAE,UAAUJ,YAAV,EAAwBK,OAAxB,EAAiC;IACpC,IAAGL,YAAH,EAAiB;MACf,IAAG,CAACZ,eAAe,CAACY,YAAD,CAAnB,EAAmC;QACjCZ,eAAe,CAACY,YAAD,CAAf,GAAgC,EAAhC;MACD;;MACD,IAAGZ,eAAe,CAACY,YAAD,CAAf,CAA8BM,OAA9B,CAAsCD,OAAtC,MAAmD,CAAC,CAAvD,EAA0D;QACxDjB,eAAe,CAACY,YAAD,CAAf,CAA8BO,IAA9B,CAAmCF,OAAnC;MACD;IACF;EACF,CA3BiB;EA6BlBG,KAAK,EAAE,UAAUR,YAAV,EAAwB;IAC7B,OAAOZ,eAAe,CAACY,YAAD,CAAf,GAAgCZ,eAAe,CAACY,YAAD,CAAf,CAA8BS,MAA9D,GAAuE,CAA9E;EACD,CA/BiB;EAiClBP,aAAa,EAAE,UAAUF,YAAV,EAAwB;IACrC,OAAQA,YAAY,IAAIZ,eAAe,CAACY,YAAD,CAAhC,IAAmD,EAA1D;EACD,CAnCiB;EAqClBG,KAAK,EAAE,UAAUH,YAAV,EAAwB;IAC7BA,YAAY,IAAIZ,eAAe,CAACY,YAAD,CAA/B,IAAiD,OAAOZ,eAAe,CAACY,YAAD,CAAvE;EACD;AAvCiB,CAApB;AA0CAU,MAAM,CAACC,OAAP,GAAiBtB,aAAjB"},"metadata":{},"sourceType":"script"}