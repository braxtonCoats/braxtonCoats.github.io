{"ast":null,"code":"/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar path = require('path'),\n    fs = require('fs-extra'),\n    chalk = require('chalk');\n/**\n * Takes the style property object and a format and returns a\n * string that can be written to a file.\n * @memberOf StyleDictionary\n * @param {Object} file\n * @param {Object} platform\n * @param {Object} dictionary (unused)\n * @returns {null}\n */\n\n\nfunction cleanDir() {\n  let file = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let platform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var {\n    destination\n  } = file;\n  if (typeof destination !== 'string') throw new Error('Please enter a valid destination'); // if there is a clean path, prepend the destination with it\n\n  if (platform.buildPath) {\n    destination = platform.buildPath + destination;\n  }\n\n  var dirname = path.dirname(destination);\n\n  while (dirname) {\n    if (fs.existsSync(dirname)) {\n      if (fs.readdirSync(dirname).length === 0) {\n        console.log(chalk.bold.red('-') + ' ' + dirname);\n        fs.rmdirSync(dirname);\n      } else {\n        break;\n      }\n    }\n\n    dirname = dirname.split('/');\n    dirname.pop();\n    dirname = dirname.join('/');\n  }\n}\n\nmodule.exports = cleanDir;","map":{"version":3,"names":["path","require","fs","chalk","cleanDir","file","platform","destination","Error","buildPath","dirname","existsSync","readdirSync","length","console","log","bold","red","rmdirSync","split","pop","join","module","exports"],"sources":["/Users/braxtoncoats/Github/bcd/node_modules/style-dictionary/lib/cleanDir.js"],"sourcesContent":["/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nvar path  = require('path'),\n    fs    = require('fs-extra'),\n    chalk = require('chalk');\n\n\n/**\n * Takes the style property object and a format and returns a\n * string that can be written to a file.\n * @memberOf StyleDictionary\n * @param {Object} file\n * @param {Object} platform\n * @param {Object} dictionary (unused)\n * @returns {null}\n */\nfunction cleanDir(file = {}, platform = {}) {\n  var { destination } = file;\n\n  if (typeof destination !== 'string')\n    throw new Error('Please enter a valid destination');\n\n  // if there is a clean path, prepend the destination with it\n  if (platform.buildPath) {\n    destination = platform.buildPath + destination;\n  }\n\n  var dirname = path.dirname(destination);\n\n  while(dirname) {\n    if(fs.existsSync(dirname)) {\n      if (fs.readdirSync(dirname).length===0) {\n        console.log(chalk.bold.red('-') + ' ' + dirname);\n        fs.rmdirSync(dirname);\n      }\n      else {\n        break;\n      }\n    }\n\n    dirname = dirname.split('/');\n    dirname.pop();\n    dirname = dirname.join('/');\n  }\n}\n\n\nmodule.exports = cleanDir;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,IAAI,GAAIC,OAAO,CAAC,MAAD,CAAnB;AAAA,IACIC,EAAE,GAAMD,OAAO,CAAC,UAAD,CADnB;AAAA,IAEIE,KAAK,GAAGF,OAAO,CAAC,OAAD,CAFnB;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,QAAT,GAA4C;EAAA,IAA1BC,IAA0B,uEAAnB,EAAmB;EAAA,IAAfC,QAAe,uEAAJ,EAAI;EAC1C,IAAI;IAAEC;EAAF,IAAkBF,IAAtB;EAEA,IAAI,OAAOE,WAAP,KAAuB,QAA3B,EACE,MAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN,CAJwC,CAM1C;;EACA,IAAIF,QAAQ,CAACG,SAAb,EAAwB;IACtBF,WAAW,GAAGD,QAAQ,CAACG,SAAT,GAAqBF,WAAnC;EACD;;EAED,IAAIG,OAAO,GAAGV,IAAI,CAACU,OAAL,CAAaH,WAAb,CAAd;;EAEA,OAAMG,OAAN,EAAe;IACb,IAAGR,EAAE,CAACS,UAAH,CAAcD,OAAd,CAAH,EAA2B;MACzB,IAAIR,EAAE,CAACU,WAAH,CAAeF,OAAf,EAAwBG,MAAxB,KAAiC,CAArC,EAAwC;QACtCC,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,IAAN,CAAWC,GAAX,CAAe,GAAf,IAAsB,GAAtB,GAA4BP,OAAxC;QACAR,EAAE,CAACgB,SAAH,CAAaR,OAAb;MACD,CAHD,MAIK;QACH;MACD;IACF;;IAEDA,OAAO,GAAGA,OAAO,CAACS,KAAR,CAAc,GAAd,CAAV;IACAT,OAAO,CAACU,GAAR;IACAV,OAAO,GAAGA,OAAO,CAACW,IAAR,CAAa,GAAb,CAAV;EACD;AACF;;AAGDC,MAAM,CAACC,OAAP,GAAiBnB,QAAjB"},"metadata":{},"sourceType":"script"}