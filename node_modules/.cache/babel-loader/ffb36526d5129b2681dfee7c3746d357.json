{"ast":null,"code":"var _jsxFileName = \"/Users/braxtoncoats/Github/bcd/src/components/ModeSwitch.js\";\nimport { Switch } from \"@mui/material\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModeSwitch = () => {\n  let clickedClass = \"clicked\";\n  const body = document.body;\n  const lightTheme = \"light\";\n  const darkTheme = \"dark\";\n  let theme;\n\n  if (localStorage) {\n    theme = localStorage.getItem(\"theme\");\n  }\n\n  if (theme === lightTheme || theme === darkTheme) {\n    body.classList.add(theme);\n  } else {\n    body.classList.add(lightTheme);\n  }\n\n  const switchTheme = e => {\n    if (theme === darkTheme) {\n      body.classList.replace(darkTheme, lightTheme);\n      e.target.classList.remove(clickedClass);\n      localStorage.setItem(\"theme\", \"light\");\n      theme = lightTheme;\n    } else {\n      body.classList.replace(lightTheme, darkTheme);\n      e.target.classList.add(clickedClass);\n      localStorage.setItem(\"theme\", \"dark\");\n      theme = darkTheme;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    className: theme === \"dark\" ? clickedClass : \"\",\n    id: \"darkMode\",\n    onClick: e => switchTheme(e)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n\n_c = ModeSwitch;\nexport default ModeSwitch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModeSwitch\");","map":{"version":3,"names":["Switch","React","ModeSwitch","clickedClass","body","document","lightTheme","darkTheme","theme","localStorage","getItem","classList","add","switchTheme","e","replace","target","remove","setItem"],"sources":["/Users/braxtoncoats/Github/bcd/src/components/ModeSwitch.js"],"sourcesContent":["import { Switch } from \"@mui/material\"\nimport React from \"react\"\n\nconst ModeSwitch = () => {\n    let clickedClass = \"clicked\"\n    const body = document.body\n    const lightTheme = \"light\"\n    const darkTheme = \"dark\"\n    let theme\n\n    if (localStorage) {\n        theme = localStorage.getItem(\"theme\")\n      }\n      if (theme === lightTheme || theme === darkTheme) {\n        body.classList.add(theme)\n      } else {\n        body.classList.add(lightTheme)\n      }\n      const switchTheme = e => {\n        if (theme === darkTheme) {\n          body.classList.replace(darkTheme, lightTheme)\n          e.target.classList.remove(clickedClass)\n          localStorage.setItem(\"theme\", \"light\")\n          theme = lightTheme\n        } else {\n          body.classList.replace(lightTheme, darkTheme)\n          e.target.classList.add(clickedClass)\n          localStorage.setItem(\"theme\", \"dark\")\n          theme = darkTheme\n        }\n      }\n  return <Switch \n    className={theme === \"dark\" ? clickedClass : \"\"}\n    id=\"darkMode\"\n    onClick={e => switchTheme(e)}>\n        \n    </Switch>\n}\n\nexport default ModeSwitch"],"mappings":";AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EACrB,IAAIC,YAAY,GAAG,SAAnB;EACA,MAAMC,IAAI,GAAGC,QAAQ,CAACD,IAAtB;EACA,MAAME,UAAU,GAAG,OAAnB;EACA,MAAMC,SAAS,GAAG,MAAlB;EACA,IAAIC,KAAJ;;EAEA,IAAIC,YAAJ,EAAkB;IACdD,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAR;EACD;;EACD,IAAIF,KAAK,KAAKF,UAAV,IAAwBE,KAAK,KAAKD,SAAtC,EAAiD;IAC/CH,IAAI,CAACO,SAAL,CAAeC,GAAf,CAAmBJ,KAAnB;EACD,CAFD,MAEO;IACLJ,IAAI,CAACO,SAAL,CAAeC,GAAf,CAAmBN,UAAnB;EACD;;EACD,MAAMO,WAAW,GAAGC,CAAC,IAAI;IACvB,IAAIN,KAAK,KAAKD,SAAd,EAAyB;MACvBH,IAAI,CAACO,SAAL,CAAeI,OAAf,CAAuBR,SAAvB,EAAkCD,UAAlC;MACAQ,CAAC,CAACE,MAAF,CAASL,SAAT,CAAmBM,MAAnB,CAA0Bd,YAA1B;MACAM,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8B,OAA9B;MACAV,KAAK,GAAGF,UAAR;IACD,CALD,MAKO;MACLF,IAAI,CAACO,SAAL,CAAeI,OAAf,CAAuBT,UAAvB,EAAmCC,SAAnC;MACAO,CAAC,CAACE,MAAF,CAASL,SAAT,CAAmBC,GAAnB,CAAuBT,YAAvB;MACAM,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8B,MAA9B;MACAV,KAAK,GAAGD,SAAR;IACD;EACF,CAZD;;EAaJ,oBAAO,QAAC,MAAD;IACL,SAAS,EAAEC,KAAK,KAAK,MAAV,GAAmBL,YAAnB,GAAkC,EADxC;IAEL,EAAE,EAAC,UAFE;IAGL,OAAO,EAAEW,CAAC,IAAID,WAAW,CAACC,CAAD;EAHpB;IAAA;IAAA;IAAA;EAAA,QAAP;AAMD,CAlCD;;KAAMZ,U;AAoCN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}