{"ast":null,"code":"var _jsxFileName = \"/Users/braxtoncoats/Github/bcd/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Home from './pages/Home';\nimport Navigation from './navigation/Navigation';\nimport { Grid } from '@mui/material';\nimport dittodata from './ditto';\nimport DittoProvider from \"ditto-react\";\nimport Footer from './pages/Footer';\nimport AboutMe from './pages/AboutMe';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorModeContext = /*#__PURE__*/React.createContext({\n  toggleColorMode: () => {}\n});\n\nfunction MyApp() {\n  _s();\n\n  const colorMode = React.useContext(ColorModeContext);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    backgroundColor: \"background.paper\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      handleChange: colorMode.toggleColorMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        exact: true,\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/aboutme\",\n        element: /*#__PURE__*/_jsxDEV(AboutMe, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyApp, \"IaYDmO+hPOIduo0ClJI2lIZymYY=\");\n\n_c = MyApp;\nexport default function ToggleColorMode() {\n  _s2();\n\n  const [mode, setMode] = React.useState('light');\n  const colorMode = React.useMemo(() => ({\n    toggleColorMode: () => {\n      setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n    }\n  }), []);\n  const theme = React.useMemo(() => createTheme({\n    palette: {\n      mode\n    }\n  }), [mode]);\n  return /*#__PURE__*/_jsxDEV(DittoProvider, {\n    source: dittodata,\n    projectId: \"project_62f05a6f45f99efffd0ab277\",\n    children: /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n      value: colorMode,\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(MyApp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ToggleColorMode, \"d4Wg7a/ehJsJwQbDoYd9huIJFWY=\");\n\n_c2 = ToggleColorMode;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyApp\");\n$RefreshReg$(_c2, \"ToggleColorMode\");","map":{"version":3,"names":["React","ThemeProvider","createTheme","Home","Navigation","Grid","dittodata","DittoProvider","Footer","AboutMe","BrowserRouter","Router","Routes","Route","ColorModeContext","createContext","toggleColorMode","MyApp","colorMode","useContext","ToggleColorMode","mode","setMode","useState","useMemo","prevMode","theme","palette"],"sources":["/Users/braxtoncoats/Github/bcd/src/App.js"],"sourcesContent":["import * as React from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Home from './pages/Home'\nimport Navigation from './navigation/Navigation'\nimport { Grid } from '@mui/material';\nimport dittodata from './ditto';\nimport DittoProvider from \"ditto-react\";\nimport Footer from './pages/Footer';\nimport AboutMe from './pages/AboutMe';\nimport { BrowserRouter as Router, Routes, Route}\n    from 'react-router-dom';\n\n\n\nconst ColorModeContext = React.createContext({ toggleColorMode: () => {} });\n\nfunction MyApp() {\n  const colorMode = React.useContext(ColorModeContext);\n  return (\n\n    <Grid container backgroundColor='background.paper'>\n      <Navigation handleChange={colorMode.toggleColorMode} />    \n      <Routes>\n        <Route exact path='/' exact element={<Home />} />\n        <Route path='/aboutme' element={<AboutMe/>} />\n    </Routes>\n      <Home />\n      <Footer />\n    </Grid>\n\n\n  );\n}\n\nexport default function ToggleColorMode() {\n  const [mode, setMode] = React.useState('light');\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n      },\n    }),\n    [],\n  );\n\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n        },\n      }),\n    [mode],\n  );\n\n  return (\n\n    <DittoProvider source={dittodata} projectId=\"project_62f05a6f45f99efffd0ab277\">\n      <ColorModeContext.Provider value={colorMode}>\n        <ThemeProvider theme={theme}>\n            <MyApp />\n        </ThemeProvider>\n      </ColorModeContext.Provider>\n    </DittoProvider>\n\n  );\n}"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,sBAA3C;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,OAAOC,SAAP,MAAsB,SAAtB;AACA,OAAOC,aAAP,MAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QACS,kBADT;;AAKA,MAAMC,gBAAgB,gBAAGd,KAAK,CAACe,aAAN,CAAoB;EAAEC,eAAe,EAAE,MAAM,CAAE;AAA3B,CAApB,CAAzB;;AAEA,SAASC,KAAT,GAAiB;EAAA;;EACf,MAAMC,SAAS,GAAGlB,KAAK,CAACmB,UAAN,CAAiBL,gBAAjB,CAAlB;EACA,oBAEE,QAAC,IAAD;IAAM,SAAS,MAAf;IAAgB,eAAe,EAAC,kBAAhC;IAAA,wBACE,QAAC,UAAD;MAAY,YAAY,EAAEI,SAAS,CAACF;IAApC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,KAAK,MAAZ;QAAa,IAAI,EAAC,GAAlB;QAAsB,KAAK,MAA3B;QAA4B,OAAO,eAAE,QAAC,IAAD;UAAA;UAAA;UAAA;QAAA;MAArC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAO,IAAI,EAAC,UAAZ;QAAuB,OAAO,eAAE,QAAC,OAAD;UAAA;UAAA;UAAA;QAAA;MAAhC;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAME,QAAC,IAAD;MAAA;MAAA;MAAA;IAAA,QANF,eAOE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QAFF;AAcD;;GAhBQC,K;;KAAAA,K;AAkBT,eAAe,SAASG,eAAT,GAA2B;EAAA;;EACxC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBtB,KAAK,CAACuB,QAAN,CAAe,OAAf,CAAxB;EACA,MAAML,SAAS,GAAGlB,KAAK,CAACwB,OAAN,CAChB,OAAO;IACLR,eAAe,EAAE,MAAM;MACrBM,OAAO,CAAEG,QAAD,IAAeA,QAAQ,KAAK,OAAb,GAAuB,MAAvB,GAAgC,OAAhD,CAAP;IACD;EAHI,CAAP,CADgB,EAMhB,EANgB,CAAlB;EASA,MAAMC,KAAK,GAAG1B,KAAK,CAACwB,OAAN,CACZ,MACEtB,WAAW,CAAC;IACVyB,OAAO,EAAE;MACPN;IADO;EADC,CAAD,CAFD,EAOZ,CAACA,IAAD,CAPY,CAAd;EAUA,oBAEE,QAAC,aAAD;IAAe,MAAM,EAAEf,SAAvB;IAAkC,SAAS,EAAC,kCAA5C;IAAA,uBACE,QAAC,gBAAD,CAAkB,QAAlB;MAA2B,KAAK,EAAEY,SAAlC;MAAA,uBACE,QAAC,aAAD;QAAe,KAAK,EAAEQ,KAAtB;QAAA,uBACI,QAAC,KAAD;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QAFF;AAWD;;IAhCuBN,e;;MAAAA,e"},"metadata":{},"sourceType":"module"}