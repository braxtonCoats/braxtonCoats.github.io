{"ast":null,"code":"import _slicedToArray from\"/Users/braxtoncoats/Github/bcd/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import*as React from'react';import{useEffect,useState}from'react';import{ThemeProvider,createTheme}from'@mui/material/styles';import Home from'./pages/Home';import Navigation from'./navigation/Navigation';import dittodata from'./ditto';import DittoProvider from\"ditto-react\";import Footer from'./pages/Footer';import Project1 from'./pages/Project1';import Project2 from'./pages/Project2';import AboutMe from'./pages/AboutMe';import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import{CustomPalette}from'./theme/CustomPalette';import{Box}from'@mui/system';import{Switch}from'@mui/material';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ColorModeContext=/*#__PURE__*/React.createContext({toggleColorMode:function toggleColorMode(){}});function MyApp(){var colorMode=React.useContext(ColorModeContext);return/*#__PURE__*/_jsx(Box,{sx:{bgcolor:'background.main'},children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navigation,{handleChange:colorMode.toggleColorMode}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"about-me\",element:/*#__PURE__*/_jsx(AboutMe,{})}),/*#__PURE__*/_jsx(Route,{path:\"project-1\",element:/*#__PURE__*/_jsx(Project1,{})}),/*#__PURE__*/_jsx(Route,{path:\"project-2\",element:/*#__PURE__*/_jsx(Project2,{})})]}),/*#__PURE__*/_jsx(Footer,{})]})});}export default function ToggleColorMode(){var storedDarkMode=localStorage.getItem(\"DARK_MODE\");var _React$useState=React.useState(storedDarkMode),_React$useState2=_slicedToArray(_React$useState,2),mode=_React$useState2[0],setMode=_React$useState2[1];useEffect(function(){localStorage.setItem(\"DARK_MODE\",mode);},[mode]);var colorMode=React.useMemo(function(){return{toggleColorMode:function toggleColorMode(){setMode(function(prevMode){return prevMode==='light'?'dark':'light';});if(storedDarkMode==='dark'){localStorage.theme='dark';}else{localStorage.theme='light';}console.log(\"Mode after Switch: \".concat(localStorage.theme));console.log(\"storedDarkMode: \".concat(storedDarkMode));}};},[]);var theme=React.useMemo(function(){return createTheme(CustomPalette(mode));},[mode]);return/*#__PURE__*/_jsx(DittoProvider,{source:dittodata,projectId:\"project_62f05a6f45f99efffd0ab277\",children:/*#__PURE__*/_jsx(ColorModeContext.Provider,{value:colorMode,children:/*#__PURE__*/_jsx(ThemeProvider,{theme:theme,children:/*#__PURE__*/_jsx(MyApp,{})})})});}","map":{"version":3,"names":["React","useEffect","useState","ThemeProvider","createTheme","Home","Navigation","dittodata","DittoProvider","Footer","Project1","Project2","AboutMe","BrowserRouter","Router","Routes","Route","CustomPalette","Box","Switch","ColorModeContext","createContext","toggleColorMode","MyApp","colorMode","useContext","bgcolor","ToggleColorMode","storedDarkMode","localStorage","getItem","mode","setMode","setItem","useMemo","prevMode","theme","console","log"],"sources":["/Users/braxtoncoats/Github/bcd/src/App.js"],"sourcesContent":["import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Home from './pages/Home'\nimport Navigation from './navigation/Navigation'\nimport dittodata from './ditto';\nimport DittoProvider from \"ditto-react\";\nimport Footer from './pages/Footer';\nimport Project1 from './pages/Project1';\nimport Project2 from './pages/Project2';\nimport AboutMe from './pages/AboutMe';\nimport { BrowserRouter as Router, Routes, Route} from 'react-router-dom';\nimport { CustomPalette } from './theme/CustomPalette';\nimport { Box } from '@mui/system';\nimport { Switch } from '@mui/material';\n\nconst ColorModeContext = React.createContext({ toggleColorMode: () => {} });\n\n\nfunction MyApp() {\n  const colorMode = React.useContext(ColorModeContext);\n\n\n\n  return (\n    <Box sx={{ bgcolor: 'background.main' }}>\n    <Router>\n      <Navigation handleChange={colorMode.toggleColorMode} />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />  \n        \n        <Route path='about-me' element={<AboutMe />} />\n        <Route path='project-1' element={<Project1 />} />\n        <Route path='project-2' element={<Project2 />} />\n      </Routes>\n      <Footer />\n    </Router>\n    </Box>\n  );\n}\n\nexport default function ToggleColorMode() {\n  const storedDarkMode = localStorage.getItem(\"DARK_MODE\");\n  const [mode, setMode] = React.useState(storedDarkMode);\n\n\n  useEffect(() => {\n    localStorage.setItem(\"DARK_MODE\", mode);\n  }, [mode]);\n\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n      \n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n        if (storedDarkMode === 'dark'){\n          localStorage.theme = 'dark';\n        }\n        else{\n          localStorage.theme = 'light';\n        }\n        console.log(`Mode after Switch: ${localStorage.theme}`);\n        console.log(`storedDarkMode: ${storedDarkMode}`);\n\n      },\n    }),\n    [],\n  );\n\n\n\n  const theme = React.useMemo( () => createTheme(CustomPalette(mode)), [mode]);\n\n  return (\n\n    <DittoProvider source={dittodata} projectId=\"project_62f05a6f45f99efffd0ab277\">\n      <ColorModeContext.Provider value={colorMode}>\n        <ThemeProvider theme={theme}>\n            <MyApp />\n        </ThemeProvider>\n      </ColorModeContext.Provider>\n    </DittoProvider>\n\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}