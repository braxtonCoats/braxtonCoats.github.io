{"ast":null,"code":"/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n/**\n * Adds a custom parser to parse style dictionary files\n * @static\n * @memberof module:style-dictionary\n * @param {Regex} pattern - A file path regular expression to match which files this parser should be be used on. This is similar to how webpack loaders work. `/\\.json$/` will match any file ending in '.json', for example.\n * @param {Function} parse - Function to parse the file contents. Takes 1 argument, which is an object with 2 attributes: contents wich is the string of the file contents and filePath. The function should return a plain Javascript object.\n * @returns {module:style-dictionary}\n * @example\n * ```js\n * StyleDictionary.registerParser({\n *   pattern: /\\.json$/,\n *   parse: ({contents, filePath}) => {\n *     return JSON.parse(contents);\n *   }\n * })\n * ```\n */\nfunction registerParser(options) {\n  if (!(options.pattern instanceof RegExp)) throw new Error(`Can't register parser; parser.pattern must be a regular expression`);\n  if (typeof options.parse !== 'function') throw new Error('Can\\'t register parser; parser.parse must be a function');\n  this.parsers.push(options);\n  return this;\n}\n\nmodule.exports = registerParser;","map":{"version":3,"names":["registerParser","options","pattern","RegExp","Error","parse","parsers","push","module","exports"],"sources":["/Users/braxtoncoats/Github/bcd/node_modules/style-dictionary/lib/register/parser.js"],"sourcesContent":["/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n/**\n * Adds a custom parser to parse style dictionary files\n * @static\n * @memberof module:style-dictionary\n * @param {Regex} pattern - A file path regular expression to match which files this parser should be be used on. This is similar to how webpack loaders work. `/\\.json$/` will match any file ending in '.json', for example.\n * @param {Function} parse - Function to parse the file contents. Takes 1 argument, which is an object with 2 attributes: contents wich is the string of the file contents and filePath. The function should return a plain Javascript object.\n * @returns {module:style-dictionary}\n * @example\n * ```js\n * StyleDictionary.registerParser({\n *   pattern: /\\.json$/,\n *   parse: ({contents, filePath}) => {\n *     return JSON.parse(contents);\n *   }\n * })\n * ```\n */\nfunction registerParser(options) {\n  if (!(options.pattern instanceof RegExp))\n    throw new Error(`Can't register parser; parser.pattern must be a regular expression`);\n  if (typeof options.parse !== 'function')\n    throw new Error('Can\\'t register parser; parser.parse must be a function');\n\n  this.parsers.push(options);\n\n  return this;\n}\n\nmodule.exports = registerParser;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,cAAT,CAAwBC,OAAxB,EAAiC;EAC/B,IAAI,EAAEA,OAAO,CAACC,OAAR,YAA2BC,MAA7B,CAAJ,EACE,MAAM,IAAIC,KAAJ,CAAW,oEAAX,CAAN;EACF,IAAI,OAAOH,OAAO,CAACI,KAAf,KAAyB,UAA7B,EACE,MAAM,IAAID,KAAJ,CAAU,yDAAV,CAAN;EAEF,KAAKE,OAAL,CAAaC,IAAb,CAAkBN,OAAlB;EAEA,OAAO,IAAP;AACD;;AAEDO,MAAM,CAACC,OAAP,GAAiBT,cAAjB"},"metadata":{},"sourceType":"script"}