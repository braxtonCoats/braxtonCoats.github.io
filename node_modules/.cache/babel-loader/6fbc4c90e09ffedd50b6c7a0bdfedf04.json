{"ast":null,"code":"/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar fs = require('fs-extra'),\n    chalk = require('chalk');\n/**\n * Takes the style property object and a format and returns a\n * string that can be written to a file.\n * @memberOf StyleDictionary\n * @param {String} destination\n * @param {Function} format (unused)\n * @param {Object} platform\n * @param {Object} dictionary (unused)\n * @param {Function} filter (unused)\n * @returns {null}\n */\n\n\nfunction cleanFile() {\n  let file = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let platform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var {\n    destination\n  } = file;\n  if (typeof destination !== 'string') throw new Error('Please enter a valid destination'); // if there is a clean path, prepend the destination with it\n\n  if (platform.buildPath) {\n    destination = platform.buildPath + destination;\n  }\n\n  if (!fs.existsSync(destination)) {\n    console.log(chalk.bold.red('!') + ' ' + destination + ', does not exist');\n    return;\n  }\n\n  fs.unlinkSync(destination);\n  console.log(chalk.bold.red('-') + ' ' + destination);\n}\n\nmodule.exports = cleanFile;","map":{"version":3,"names":["fs","require","chalk","cleanFile","file","platform","destination","Error","buildPath","existsSync","console","log","bold","red","unlinkSync","module","exports"],"sources":["/Users/braxtoncoats/Github/bcd/node_modules/style-dictionary/lib/cleanFile.js"],"sourcesContent":["/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nvar fs    = require('fs-extra'),\n    chalk = require('chalk');\n\n\n/**\n * Takes the style property object and a format and returns a\n * string that can be written to a file.\n * @memberOf StyleDictionary\n * @param {String} destination\n * @param {Function} format (unused)\n * @param {Object} platform\n * @param {Object} dictionary (unused)\n * @param {Function} filter (unused)\n * @returns {null}\n */\nfunction cleanFile(file = {}, platform = {}) {\n  var { destination } = file;\n\n  if (typeof destination !== 'string')\n    throw new Error('Please enter a valid destination');\n\n  // if there is a clean path, prepend the destination with it\n  if (platform.buildPath) {\n    destination = platform.buildPath + destination;\n  }\n\n  if (!fs.existsSync(destination)) {\n    console.log(chalk.bold.red('!') + ' ' + destination + ', does not exist');\n    return;\n  }\n\n  fs.unlinkSync(destination);\n  console.log(chalk.bold.red('-') + ' ' + destination);\n}\n\n\nmodule.exports = cleanFile;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,EAAE,GAAMC,OAAO,CAAC,UAAD,CAAnB;AAAA,IACIC,KAAK,GAAGD,OAAO,CAAC,OAAD,CADnB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,SAAT,GAA6C;EAAA,IAA1BC,IAA0B,uEAAnB,EAAmB;EAAA,IAAfC,QAAe,uEAAJ,EAAI;EAC3C,IAAI;IAAEC;EAAF,IAAkBF,IAAtB;EAEA,IAAI,OAAOE,WAAP,KAAuB,QAA3B,EACE,MAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN,CAJyC,CAM3C;;EACA,IAAIF,QAAQ,CAACG,SAAb,EAAwB;IACtBF,WAAW,GAAGD,QAAQ,CAACG,SAAT,GAAqBF,WAAnC;EACD;;EAED,IAAI,CAACN,EAAE,CAACS,UAAH,CAAcH,WAAd,CAAL,EAAiC;IAC/BI,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACU,IAAN,CAAWC,GAAX,CAAe,GAAf,IAAsB,GAAtB,GAA4BP,WAA5B,GAA0C,kBAAtD;IACA;EACD;;EAEDN,EAAE,CAACc,UAAH,CAAcR,WAAd;EACAI,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACU,IAAN,CAAWC,GAAX,CAAe,GAAf,IAAsB,GAAtB,GAA4BP,WAAxC;AACD;;AAGDS,MAAM,CAACC,OAAP,GAAiBb,SAAjB"},"metadata":{},"sourceType":"script"}