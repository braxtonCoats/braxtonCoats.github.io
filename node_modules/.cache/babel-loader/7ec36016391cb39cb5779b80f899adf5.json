{"ast":null,"code":"/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nconst deepExtend = require('./deepExtend');\n\nfunction createFormatArgs(_ref) {\n  let {\n    dictionary,\n    platform,\n    file = {}\n  } = _ref;\n  const {\n    allProperties,\n    properties,\n    allTokens,\n    tokens,\n    usesReference,\n    getReferences\n  } = dictionary; // This will merge platform and file-level configuration\n  // where the file configuration takes precedence\n\n  const {\n    options\n  } = platform;\n  file = deepExtend([{}, {\n    options\n  }, file]);\n  return {\n    dictionary,\n    usesReference,\n    getReferences,\n    allProperties,\n    properties,\n    // adding tokens and allTokens as the new way starting in v3,\n    // keeping properties and allProperties around for backwards-compatibility\n    allTokens,\n    tokens,\n    platform,\n    file,\n    options: file.options || {}\n  };\n}\n\nmodule.exports = createFormatArgs;","map":{"version":3,"names":["deepExtend","require","createFormatArgs","dictionary","platform","file","allProperties","properties","allTokens","tokens","usesReference","getReferences","options","module","exports"],"sources":["/Users/braxtoncoats/Github/bcd/node_modules/style-dictionary/lib/utils/createFormatArgs.js"],"sourcesContent":["/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nconst deepExtend = require('./deepExtend');\n\nfunction createFormatArgs({ dictionary, platform, file = {} }) {\n  const {allProperties, properties, allTokens, tokens, usesReference, getReferences} = dictionary;\n  // This will merge platform and file-level configuration\n  // where the file configuration takes precedence\n  const {options} = platform;\n  file = deepExtend([{}, {options}, file]);\n\n  return {\n    dictionary,\n    usesReference,\n    getReferences,\n    allProperties,\n    properties,\n    // adding tokens and allTokens as the new way starting in v3,\n    // keeping properties and allProperties around for backwards-compatibility\n    allTokens,\n    tokens,\n    platform,\n    file,\n    options: file.options || {}\n  }\n}\n\nmodule.exports = createFormatArgs;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAA1B;;AAEA,SAASC,gBAAT,OAA+D;EAAA,IAArC;IAAEC,UAAF;IAAcC,QAAd;IAAwBC,IAAI,GAAG;EAA/B,CAAqC;EAC7D,MAAM;IAACC,aAAD;IAAgBC,UAAhB;IAA4BC,SAA5B;IAAuCC,MAAvC;IAA+CC,aAA/C;IAA8DC;EAA9D,IAA+ER,UAArF,CAD6D,CAE7D;EACA;;EACA,MAAM;IAACS;EAAD,IAAYR,QAAlB;EACAC,IAAI,GAAGL,UAAU,CAAC,CAAC,EAAD,EAAK;IAACY;EAAD,CAAL,EAAgBP,IAAhB,CAAD,CAAjB;EAEA,OAAO;IACLF,UADK;IAELO,aAFK;IAGLC,aAHK;IAILL,aAJK;IAKLC,UALK;IAML;IACA;IACAC,SARK;IASLC,MATK;IAULL,QAVK;IAWLC,IAXK;IAYLO,OAAO,EAAEP,IAAI,CAACO,OAAL,IAAgB;EAZpB,CAAP;AAcD;;AAEDC,MAAM,CAACC,OAAP,GAAiBZ,gBAAjB"},"metadata":{},"sourceType":"script"}