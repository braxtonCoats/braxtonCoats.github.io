{"ast":null,"code":"import _slicedToArray from\"/Users/braxtoncoats/Github/bcd/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import*as React from'react';import{ThemeProvider,createTheme}from'@mui/material/styles';import Home from'./pages/Home';import Navigation from'./navigation/Navigation';import{Grid}from'@mui/material';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ColorModeContext=/*#__PURE__*/React.createContext({toggleColorMode:function toggleColorMode(){}});function MyApp(){var colorMode=React.useContext(ColorModeContext);return/*#__PURE__*/_jsxs(Grid,{container:true,backgroundColor:\"background.paper\",children:[/*#__PURE__*/_jsx(Navigation,{handleChange:colorMode.toggleColorMode}),/*#__PURE__*/_jsx(Home,{})]});}export default function ToggleColorMode(){var _React$useState=React.useState('light'),_React$useState2=_slicedToArray(_React$useState,2),mode=_React$useState2[0],setMode=_React$useState2[1];var colorMode=React.useMemo(function(){return{toggleColorMode:function toggleColorMode(){setMode(function(prevMode){return prevMode==='light'?'dark':'light';});}};},[]);var theme=React.useMemo(function(){return createTheme({palette:{mode:mode}});},[mode]);return/*#__PURE__*/_jsx(ColorModeContext.Provider,{value:colorMode,children:/*#__PURE__*/_jsx(ThemeProvider,{theme:theme,children:/*#__PURE__*/_jsx(MyApp,{})})});}","map":{"version":3,"names":["React","ThemeProvider","createTheme","Home","Navigation","Grid","ColorModeContext","createContext","toggleColorMode","MyApp","colorMode","useContext","ToggleColorMode","useState","mode","setMode","useMemo","prevMode","theme","palette"],"sources":["/Users/braxtoncoats/Github/bcd/src/App.js"],"sourcesContent":["import * as React from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport Home from './pages/Home'\nimport Navigation from './navigation/Navigation'\nimport { Grid } from '@mui/material';\n\nconst ColorModeContext = React.createContext({ toggleColorMode: () => {} });\n\nfunction MyApp() {\n  const colorMode = React.useContext(ColorModeContext);\n  return (\n    <Grid container backgroundColor='background.paper'>\n      <Navigation handleChange={colorMode.toggleColorMode} />\n      <Home />\n    </Grid>\n\n  );\n}\n\nexport default function ToggleColorMode() {\n  const [mode, setMode] = React.useState('light');\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n      },\n    }),\n    [],\n  );\n\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n        },\n      }),\n    [mode],\n  );\n\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>\n        <MyApp />\n      </ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n}\n"],"mappings":"oHAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CACA,OAASC,aAAT,CAAwBC,WAAxB,KAA2C,sBAA3C,CACA,MAAOC,KAAP,KAAiB,cAAjB,CACA,MAAOC,WAAP,KAAuB,yBAAvB,CACA,OAASC,IAAT,KAAqB,eAArB,C,wFAEA,GAAMC,iBAAgB,cAAGN,KAAK,CAACO,aAAN,CAAoB,CAAEC,eAAe,CAAE,0BAAM,CAAE,CAA3B,CAApB,CAAzB,CAEA,QAASC,MAAT,EAAiB,CACf,GAAMC,UAAS,CAAGV,KAAK,CAACW,UAAN,CAAiBL,gBAAjB,CAAlB,CACA,mBACE,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,eAAe,CAAC,kBAAhC,wBACE,KAAC,UAAD,EAAY,YAAY,CAAEI,SAAS,CAACF,eAApC,EADF,cAEE,KAAC,IAAD,IAFF,GADF,CAOD,CAED,cAAe,SAASI,gBAAT,EAA2B,CACxC,oBAAwBZ,KAAK,CAACa,QAAN,CAAe,OAAf,CAAxB,oDAAOC,IAAP,qBAAaC,OAAb,qBACA,GAAML,UAAS,CAAGV,KAAK,CAACgB,OAAN,CAChB,iBAAO,CACLR,eAAe,CAAE,0BAAM,CACrBO,OAAO,CAAC,SAACE,QAAD,QAAeA,SAAQ,GAAK,OAAb,CAAuB,MAAvB,CAAgC,OAA/C,EAAD,CAAP,CACD,CAHI,CAAP,EADgB,CAMhB,EANgB,CAAlB,CASA,GAAMC,MAAK,CAAGlB,KAAK,CAACgB,OAAN,CACZ,iBACEd,YAAW,CAAC,CACViB,OAAO,CAAE,CACPL,IAAI,CAAJA,IADO,CADC,CAAD,CADb,EADY,CAOZ,CAACA,IAAD,CAPY,CAAd,CAUA,mBACE,KAAC,gBAAD,CAAkB,QAAlB,EAA2B,KAAK,CAAEJ,SAAlC,uBACE,KAAC,aAAD,EAAe,KAAK,CAAEQ,KAAtB,uBACE,KAAC,KAAD,IADF,EADF,EADF,CAOD"},"metadata":{},"sourceType":"module"}