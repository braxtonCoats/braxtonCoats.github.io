{"ast":null,"code":"/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nconst deepExtend = require('../utils/deepExtend');\n\nconst _ = require('../utils/es6_');\n/**\n * Takes a property object, a leaf node in a properties object, and\n * returns a new object that has some properties set. It clones the\n * original object for safekeeping, adds a name, adds an attributes object,\n * and a path array.\n * @private\n * @param {Object} property - the property object to setup\n * @param {String} name - The name of the property, which will should be its key in the object.\n * @param {Array} path - The path of keys to get to the property from the top level of the properties object.\n * @returns {Object} - A new object that is setup and ready to go.\n */\n\n\nfunction propertySetup(property, name, path) {\n  if (!property && !_.isPlainObject(property)) throw new Error('Property object must be an object');\n  if (!name || !_.isString(name)) throw new Error('Name must be a string');\n  if (!path || !_.isArray(path)) throw new Error('Path must be an array');\n  let to_ret = property; // Only do this once\n\n  if (!property.original) {\n    // Initial property setup\n    // Keep the original object properties like it was in file (whitout additional data)\n    // so we can key off them in the transforms\n    to_ret = deepExtend([{}, property]);\n    let to_ret_original = deepExtend([{}, property]);\n    delete to_ret_original.filePath;\n    delete to_ret_original.isSource;\n    to_ret.original = to_ret_original; // Copy the name - it will be our base name to transform\n\n    to_ret.name = to_ret.name || name || ''; // Create an empty attributes object that we can transform on it later\n\n    to_ret.attributes = to_ret.attributes || {}; // An array of the path down the object tree; we will use it to build readable names\n    // like color_font_base\n\n    to_ret.path = _.clone(path);\n  }\n\n  return to_ret;\n}\n\nmodule.exports = propertySetup;","map":{"version":3,"names":["deepExtend","require","_","propertySetup","property","name","path","isPlainObject","Error","isString","isArray","to_ret","original","to_ret_original","filePath","isSource","attributes","clone","module","exports"],"sources":["/Users/braxtoncoats/Github/bcd/node_modules/style-dictionary/lib/transform/propertySetup.js"],"sourcesContent":["/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nconst deepExtend = require('../utils/deepExtend');\nconst _ = require('../utils/es6_');\n\n/**\n * Takes a property object, a leaf node in a properties object, and\n * returns a new object that has some properties set. It clones the\n * original object for safekeeping, adds a name, adds an attributes object,\n * and a path array.\n * @private\n * @param {Object} property - the property object to setup\n * @param {String} name - The name of the property, which will should be its key in the object.\n * @param {Array} path - The path of keys to get to the property from the top level of the properties object.\n * @returns {Object} - A new object that is setup and ready to go.\n */\nfunction propertySetup(property, name, path) {\n  if (!property && !_.isPlainObject(property))\n    throw new Error('Property object must be an object');\n  if (!name || !_.isString(name))\n    throw new Error('Name must be a string');\n  if (!path || !_.isArray(path))\n    throw new Error('Path must be an array');\n\n  let to_ret = property;\n\n  // Only do this once\n  if (!property.original) {\n    // Initial property setup\n    // Keep the original object properties like it was in file (whitout additional data)\n    // so we can key off them in the transforms\n    to_ret = deepExtend([{}, property]);\n    let to_ret_original = deepExtend([{},property]);\n    delete to_ret_original.filePath;\n    delete to_ret_original.isSource;\n\n    to_ret.original = to_ret_original;\n    // Copy the name - it will be our base name to transform\n    to_ret.name = to_ret.name || name || '';\n    // Create an empty attributes object that we can transform on it later\n    to_ret.attributes = to_ret.attributes || {};\n    // An array of the path down the object tree; we will use it to build readable names\n    // like color_font_base\n    to_ret.path = _.clone(path);\n  }\n\n  return to_ret;\n}\n\n\nmodule.exports = propertySetup;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,qBAAD,CAA1B;;AACA,MAAMC,CAAC,GAAGD,OAAO,CAAC,eAAD,CAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,aAAT,CAAuBC,QAAvB,EAAiCC,IAAjC,EAAuCC,IAAvC,EAA6C;EAC3C,IAAI,CAACF,QAAD,IAAa,CAACF,CAAC,CAACK,aAAF,CAAgBH,QAAhB,CAAlB,EACE,MAAM,IAAII,KAAJ,CAAU,mCAAV,CAAN;EACF,IAAI,CAACH,IAAD,IAAS,CAACH,CAAC,CAACO,QAAF,CAAWJ,IAAX,CAAd,EACE,MAAM,IAAIG,KAAJ,CAAU,uBAAV,CAAN;EACF,IAAI,CAACF,IAAD,IAAS,CAACJ,CAAC,CAACQ,OAAF,CAAUJ,IAAV,CAAd,EACE,MAAM,IAAIE,KAAJ,CAAU,uBAAV,CAAN;EAEF,IAAIG,MAAM,GAAGP,QAAb,CAR2C,CAU3C;;EACA,IAAI,CAACA,QAAQ,CAACQ,QAAd,EAAwB;IACtB;IACA;IACA;IACAD,MAAM,GAAGX,UAAU,CAAC,CAAC,EAAD,EAAKI,QAAL,CAAD,CAAnB;IACA,IAAIS,eAAe,GAAGb,UAAU,CAAC,CAAC,EAAD,EAAII,QAAJ,CAAD,CAAhC;IACA,OAAOS,eAAe,CAACC,QAAvB;IACA,OAAOD,eAAe,CAACE,QAAvB;IAEAJ,MAAM,CAACC,QAAP,GAAkBC,eAAlB,CATsB,CAUtB;;IACAF,MAAM,CAACN,IAAP,GAAcM,MAAM,CAACN,IAAP,IAAeA,IAAf,IAAuB,EAArC,CAXsB,CAYtB;;IACAM,MAAM,CAACK,UAAP,GAAoBL,MAAM,CAACK,UAAP,IAAqB,EAAzC,CAbsB,CActB;IACA;;IACAL,MAAM,CAACL,IAAP,GAAcJ,CAAC,CAACe,KAAF,CAAQX,IAAR,CAAd;EACD;;EAED,OAAOK,MAAP;AACD;;AAGDO,MAAM,CAACC,OAAP,GAAiBhB,aAAjB"},"metadata":{},"sourceType":"script"}