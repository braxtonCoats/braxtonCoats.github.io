{"ast":null,"code":"var _jsxFileName = \"/Users/braxtoncoats/Github/bcd/src/AppTest.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ThemeProvider, createTheme } from \"@mui/material\";\nimport { CustomPalette } from \"./theme/CustomPalette\";\nimport Switch from \"@mui/material/Switch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = React.useState('light');\n  const [darkMode, setDarkMode] = React.useState(false);\n\n  const toggleDarkMode = () => setDarkMode(darkMode ? false : true);\n\n  const theme = React.useMemo(() => createTheme(CustomPalette(mode)), [mode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    \"data-theme\": darkMode ? \"dark\" : \"light\",\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      onClick: toggleDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello, world!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Let's create a dark mode toggle that persists when the page is reloaded.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WM8ndwfNDwXZZVnCnHMQ/8NIPuY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ThemeProvider","createTheme","CustomPalette","Switch","App","mode","setMode","useState","darkMode","setDarkMode","toggleDarkMode","theme","useMemo"],"sources":["/Users/braxtoncoats/Github/bcd/src/AppTest.js"],"sourcesContent":["import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@mui/material\";\nimport { CustomPalette } from \"./theme/CustomPalette\";\nimport Switch from \"@mui/material/Switch\";\n\nfunction App() {\n    const [mode, setMode] = React.useState('light');\n\n    const [darkMode, setDarkMode] = React.useState(false);\n    const toggleDarkMode = () => setDarkMode(darkMode ? false : true);\n\n    const theme = React.useMemo( () => createTheme(CustomPalette(mode)), [mode]);\n\n  return (\n\n    <div className=\"App\" data-theme={darkMode ? \"dark\" : \"light\"}>\n        <Switch onClick={toggleDarkMode}></Switch>\n      <h1>Hello, world!</h1>\n      <h2>Let's create a dark mode toggle that persists when the page is reloaded.</h2>\n    </div>\n\n  );\n}\n\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,eAA3C;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACX,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,KAAK,CAACQ,QAAN,CAAe,OAAf,CAAxB;EAEA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAhC;;EACA,MAAMG,cAAc,GAAG,MAAMD,WAAW,CAACD,QAAQ,GAAG,KAAH,GAAW,IAApB,CAAxC;;EAEA,MAAMG,KAAK,GAAGZ,KAAK,CAACa,OAAN,CAAe,MAAMX,WAAW,CAACC,aAAa,CAACG,IAAD,CAAd,CAAhC,EAAuD,CAACA,IAAD,CAAvD,CAAd;EAEF,oBAEE;IAAK,SAAS,EAAC,KAAf;IAAqB,cAAYG,QAAQ,GAAG,MAAH,GAAY,OAArD;IAAA,wBACI,QAAC,MAAD;MAAQ,OAAO,EAAEE;IAAjB;MAAA;MAAA;MAAA;IAAA,QADJ,eAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QAFF;AASD;;GAjBQN,G;;KAAAA,G;AAmBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}