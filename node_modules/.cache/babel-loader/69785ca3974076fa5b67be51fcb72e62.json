{"ast":null,"code":"/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n/**\n * A sorting function to be used when iterating over `dictionary.allTokens` in\n * a format.\n * @memberof module:formatHelpers\n * @example\n * ```javascript\n * StyleDictionary.registerFormat({\n *   name: 'myCustomFormat',\n *   formatter: function({ dictionary, options }) {\n *     return dictionary.allTokens.sort(sortByName)\n *       .map(token => `${token.name} = ${token.value}`)\n *       .join('\\n');\n *   }\n * });\n * ```\n * @param {*} a - first element for comparison\n * @param {*} b - second element for comparison\n * @returns {Integer} -1 or 1 depending on which element should come first based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n */\nfunction sortByName(a, b) {\n  if (b.name > a.name) {\n    return -1;\n  } else {\n    return 1;\n  }\n}\n\nmodule.exports = sortByName;","map":{"version":3,"names":["sortByName","a","b","name","module","exports"],"sources":["/Users/braxtoncoats/Github/bcd/node_modules/style-dictionary/lib/common/formatHelpers/sortByName.js"],"sourcesContent":["/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n/**\n * A sorting function to be used when iterating over `dictionary.allTokens` in\n * a format.\n * @memberof module:formatHelpers\n * @example\n * ```javascript\n * StyleDictionary.registerFormat({\n *   name: 'myCustomFormat',\n *   formatter: function({ dictionary, options }) {\n *     return dictionary.allTokens.sort(sortByName)\n *       .map(token => `${token.name} = ${token.value}`)\n *       .join('\\n');\n *   }\n * });\n * ```\n * @param {*} a - first element for comparison\n * @param {*} b - second element for comparison\n * @returns {Integer} -1 or 1 depending on which element should come first based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n */\nfunction sortByName(a,b) {\n  if (b.name > a.name) {\n    return -1\n  } else {\n    return 1\n  }\n}\n\nmodule.exports = sortByName;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,CAAoBC,CAApB,EAAsBC,CAAtB,EAAyB;EACvB,IAAIA,CAAC,CAACC,IAAF,GAASF,CAAC,CAACE,IAAf,EAAqB;IACnB,OAAO,CAAC,CAAR;EACD,CAFD,MAEO;IACL,OAAO,CAAP;EACD;AACF;;AAEDC,MAAM,CAACC,OAAP,GAAiBL,UAAjB"},"metadata":{},"sourceType":"script"}