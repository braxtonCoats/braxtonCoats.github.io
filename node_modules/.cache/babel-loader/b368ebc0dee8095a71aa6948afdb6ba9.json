{"ast":null,"code":"var _jsxFileName = \"/Users/braxtoncoats/Github/bcd/src/AppTest.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ThemeProvider, createTheme } from \"@mui/material\";\nimport { CustomPalette } from \"./theme/CustomPalette\";\nimport Switch from \"@mui/material/Switch\";\nimport { useTheme } from \"@mui/material\";\nimport { Container } from \"@mui/system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorModeContext = /*#__PURE__*/React.createContext({\n  toggleColorMode: () => {}\n});\n\nfunction App() {\n  _s();\n\n  const theme = createTheme(CustomPalette('light'));\n  const colorMode = React.useContext(ColorModeContext);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        bgcolor: 'primary.main'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        onClick: colorMode.toggleColorMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello, world!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Let's create a dark mode toggle that persists when the page is reloaded.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"IaYDmO+hPOIduo0ClJI2lIZymYY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ThemeProvider","createTheme","CustomPalette","Switch","useTheme","Container","ColorModeContext","createContext","toggleColorMode","App","theme","colorMode","useContext","bgcolor"],"sources":["/Users/braxtoncoats/Github/bcd/src/AppTest.js"],"sourcesContent":["import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@mui/material\";\nimport { CustomPalette } from \"./theme/CustomPalette\";\nimport Switch from \"@mui/material/Switch\";\nimport { useTheme } from \"@mui/material\";\nimport { Container } from \"@mui/system\";\nconst ColorModeContext = React.createContext({ toggleColorMode: () => {} });\n\nfunction App() {\n    const theme = createTheme(CustomPalette('light'))\n\n    const colorMode = React.useContext(ColorModeContext);\n\n\n  return (\n    <ThemeProvider theme={theme}>\n    \n    <Container sx={{bgcolor: 'primary.main'}}>\n        <Switch onClick={colorMode.toggleColorMode}></Switch>\n      <h1>Hello, world!</h1>\n      <h2>Let's create a dark mode toggle that persists when the page is reloaded.</h2>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,eAA3C;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AACA,MAAMC,gBAAgB,gBAAGP,KAAK,CAACQ,aAAN,CAAoB;EAAEC,eAAe,EAAE,MAAM,CAAE;AAA3B,CAApB,CAAzB;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACX,MAAMC,KAAK,GAAGT,WAAW,CAACC,aAAa,CAAC,OAAD,CAAd,CAAzB;EAEA,MAAMS,SAAS,GAAGZ,KAAK,CAACa,UAAN,CAAiBN,gBAAjB,CAAlB;EAGF,oBACE,QAAC,aAAD;IAAe,KAAK,EAAEI,KAAtB;IAAA,uBAEA,QAAC,SAAD;MAAW,EAAE,EAAE;QAACG,OAAO,EAAE;MAAV,CAAf;MAAA,wBACI,QAAC,MAAD;QAAQ,OAAO,EAAEF,SAAS,CAACH;MAA3B;QAAA;QAAA;QAAA;MAAA,QADJ,eAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GAhBQC,G;;KAAAA,G;AAkBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}