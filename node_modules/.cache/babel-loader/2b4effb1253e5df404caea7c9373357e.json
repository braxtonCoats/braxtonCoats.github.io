{"ast":null,"code":"/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nconst defaults = require('./defaults');\n/**\n * Returns the paths name be joining its parts with a given separator.\n *\n * @private\n * @param {Array} path\n * @param {Object} opts\n * @returns {string} - The paths name\n */\n\n\nfunction getName(path) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const options = Object.assign({}, defaults, opts);\n\n  if (!path || !(path instanceof Array)) {\n    throw new Error('Getting name for path failed. Path must be an array');\n  }\n\n  return path.join(options.separator);\n}\n\nmodule.exports = getName;","map":{"version":3,"names":["defaults","require","getName","path","opts","options","Object","assign","Array","Error","join","separator","module","exports"],"sources":["/Users/braxtoncoats/Github/bcd/node_modules/style-dictionary/lib/utils/references/getName.js"],"sourcesContent":["/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nconst defaults = require('./defaults');\n\n/**\n * Returns the paths name be joining its parts with a given separator.\n *\n * @private\n * @param {Array} path\n * @param {Object} opts\n * @returns {string} - The paths name\n */\nfunction getName(path, opts = {}) {\n  const options = Object.assign({}, defaults, opts);\n  if (!path || !(path instanceof Array)) {\n    throw new Error('Getting name for path failed. Path must be an array');\n  }\n  return path.join(options.separator);\n}\n\n\nmodule.exports = getName;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,OAAT,CAAiBC,IAAjB,EAAkC;EAAA,IAAXC,IAAW,uEAAJ,EAAI;EAChC,MAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,QAAlB,EAA4BI,IAA5B,CAAhB;;EACA,IAAI,CAACD,IAAD,IAAS,EAAEA,IAAI,YAAYK,KAAlB,CAAb,EAAuC;IACrC,MAAM,IAAIC,KAAJ,CAAU,qDAAV,CAAN;EACD;;EACD,OAAON,IAAI,CAACO,IAAL,CAAUL,OAAO,CAACM,SAAlB,CAAP;AACD;;AAGDC,MAAM,CAACC,OAAP,GAAiBX,OAAjB"},"metadata":{},"sourceType":"script"}