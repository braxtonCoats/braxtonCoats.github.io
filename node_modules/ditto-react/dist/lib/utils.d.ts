import { DittoComponentLibraryProps, DittoProjectProps, DittoProps, DittoFrameOrBlockProps, DittoTextProps } from "../components/Ditto";
import { Frame, Block, VariablesInput, Count, TextData } from "./context";
export declare const filterBlock: (blockObj: Block, variables: VariablesInput, count: Count, filters: any) => Block;
export declare const filterFrame: (_frameObj: Frame, variables: VariablesInput, count: Count, filters: any) => any;
export declare const error: (message: string, returnValue?: any) => any;
export declare const nullError: (message: string) => any;
export declare const fragmentError: (message: string) => any;
export declare const isProject: (props: DittoProps, projectIdFromContext?: string | undefined) => props is DittoProjectProps;
export declare const isComponentLibrary: (props: DittoProps) => props is DittoComponentLibraryProps;
export declare const isText: (props: DittoProps) => props is DittoTextProps;
export declare const isFrameOrBlockComponent: (props: DittoProps) => props is DittoFrameOrBlockProps;
export declare const useProjectId: (props: {
    projectId?: string;
}) => any;
export declare const interpolateVariableText: (data: TextData, variables: VariablesInput, count: Count) => {
    text: string;
    plurals: import("../components/Ditto").Plurals;
    variables: {
        [variableName: string]: import("./context").VariableData;
    };
};
